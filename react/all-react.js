/*
* Риакт компоненты - это Компоненты позволяют разделить пользовательский интерфейс на независимые, повторно используемые части и работать с каждой из частей отдельно.
* Все React-компоненты должны вести себя как чистые функции в плане своих свойств.

! useState - один из стандартных хуков предоставляемых Риактом, для управления состоянием.
? Хуки - это некоторые функции предоставляемые нам Риактом, которые всегда начинаются со слова (use)
? и которые мы можем использовать в Функциональных компонентах или в наших собственных хуках.
* Хуки можно использовать только на вверхнем уровне вложенности функционального компонента или кастомного хука!!! (т.е. мы не можем вкладывать хуки в какие то функции, в условия, в циклы)
*/

// =========================================================================================
//! функциональный компонент
const Counter = function () {
  const [count, setCount] = useState(0); //! возвращает массив под 0: само значение, а под 1: функция изменяющая состояние

  function increment() {
    setCount(count + 1);
  }

  function dencrement() {
    setCount(count - 1);
  }

  return (
    <div>
      <h1>{count}</h1>
      <button onClick={increment}>Increment</button>
      <button onClick={dencrement}>Decrement</button>
    </div>
  );
};

// ==================================================================

// * Входные данные в контексте Риакта называются пропсами (props)
// * Свойства объекта props доступны только для чтения
const PostItem = (props) => {
  return (
    <div className="post">
      <div className="post__content">
        <strong>
          {props.post.id}. {props.post.title}
        </strong>
        <div>{props.post.body}</div>
      </div>

      <div className="post__btns">
        <button>Delete</button>
      </div>
    </div>
  );
};
// =====================================================================
const PostList = ({ posts, title }) => {
  return (
    //! В компоненте может быть только один корневой элемент
    <div>
      <h1 style={{ textAlign: "center" }}>{title}</h1>

      {posts.map((post) => (
        <PostItem post={post} key={post.id} />
      ))}
    </div>
  );
};
// =====================================================================
import "./styles/App.css"; // Импортируем наши стили (один из способов) //! Для всего приложения
import classes from "./MyButton.module.css"; // один из способов работы со стилями //! для конкретного UI компонента (кнопки)
// =====================================================================
