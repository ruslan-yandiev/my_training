/*
Прислал Dmitriy Zhukov, задача с реального собеседования.

Задача про футбол.
Две команды, А и Б, играют в футбол. Некто делает свою 
ставку на результат матча, например "1:2".
По окончании матча становится известен настоящий счет, и
нам надо выдать тот или иной приз. Если некто угалад
точный счет - он получает большой приз. Если некто угадал
исход матча (выигрыш той или иной команды, или же
ничью) - он получает маленький приз. Если же он не угадал 
- он получает нулевой приз.
Необходимо написать функцию на вашем любимом языке 
программирования, которая принимает в качестве
аргументов предполагаемый счет и реальный счет, и 
возвращает целое число 0, 1 или 2(нулевой, маленький или 
большой приз).
*/

function getPrize(guessScore, realScore) {
    if (guessScore === realScore) return 2;
    const a = [...guessScore], b = [...realScore];
    if(+a[0] > +a[2] && +b[0] > +b[2] || +a[0] < +a[2] && +b[0] < +b[2] || +a[0] === +a[2] && +b[0] === +b[2]) return 1;
    return 0;
}

console.log(getPrize('1:2', '1:2')); // 2
console.log(getPrize('2:1', '5:0')); // 1
console.log(getPrize('3:0', '2:2')); // 0
console.log(getPrize('3:3', '4:2')); // 0
console.log(getPrize('3:3', '4:4')); // 1


// * ==========================================================================================
/*
Вывести все пятизначные числа, которые делятся на 2, у которых средняя цифра
нечетная, и сумма всех цифр делится на 4
*/
// for (let i = 10100; i < 100000; i += 2) if (+[...i.toString()][2] % 2 === 1 && [...i.toString()].reduce((acc, el) => +acc + +el) % 4 === 0) console.log(i);

// ? Есть обработчик повешаный на событие клика и обработчик повешаный нв событие клавиатуры
// ? сначала был клик и сработало событие клика, однако в обработчике событий(функции) очень много кода и он довольно большой
// ? сработает ли не дожидаясь окончания работы события клика событие нажатия клавиатуры если нажать клавиатуру и как будет все работать
// * js однопоточный язык, но браузер позволяет обрабатывать события асинхронно, однако событие клика попав в очередь высова call steck будет ждать окончания выполнения кода в связанного скликом и толлько потом приступит к обработки нажатия клавиатуры.