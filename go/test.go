package main

import (
	"fmt"
)

// func maximumCount(nums []int) int {
// 	left := -1
// 	right := len(nums)
// 	var mid int
// 	l, r := 0, 0

// 	for left+1 < right {
// 		mid = (left + right) / 2

// 		if nums[mid] >= 0 {
// 			right = mid
// 		} else {
// 			left = mid
// 		}
// 	}

// 	l = left
// 	left = -1
// 	right = len(nums)

// 	for left+1 < right {
// 		mid = (left + right) / 2

// 		if nums[mid] <= 0 {
// 			left = mid
// 		} else {
// 			right = mid
// 		}
// 	}

// 	r = right

// 	l += 1
// 	r = len(nums) - r

// 	if l > r {
// 		return l
// 	}

// 	return r
// }

//	func main() {
//		fmt.Println(maximumCount([]int{-3, -2, -1, 1, 2, 3}))                                  // 3
//		fmt.Println(maximumCount([]int{-4, -3, -2, -1, 1, 2, 3}))                              // 4
//		fmt.Println(maximumCount([]int{-3, -2, -1, 1, 2, 3, 4}))                               // 4
//		fmt.Println(maximumCount([]int{-6, -5, -4, -3, -2, -1, 1, 2, 3}))                      // 6
//		fmt.Println(maximumCount([]int{-3, -2, -1, 1, 2, 3, 4, 5, 6}))                         // 6
//		fmt.Println(maximumCount([]int{-3, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3})) // 3
//		fmt.Println(maximumCount([]int{-4, -3, -2, -1, 0, 1, 2, 3}))                           // 4
//		fmt.Println(maximumCount([]int{-3, -2, -1, 0, 0, 0, 0, 1, 2, 3, 4}))                   // 4
//		fmt.Println(maximumCount([]int{-6, -5, -4, -3, -2, -1, 0, 0, 1, 2, 3}))                // 6
//		fmt.Println(maximumCount([]int{-3, -2, -1, 0, 0, 1, 2, 3, 4, 5, 6}))                   // 6
//	}

/*
Когда у Валеры появляется свободное время, он идет в библиотеку и читает книги. Вот и сегодня у него появилось t свободных минут для чтения. Поэтому Валера взял n книг в библиотеке и для каждой книги оценил: какое время потребуется, чтобы ее прочитать. Пронумеруем книги целыми числами от 1 до n. Для прочтения i-той книги Валере требуется ai минут.

Валера решил, что он выберет произвольную книгу с номером i и будет читать книги друг за другом, начиная с этой книги. Другими словами, сначала он прочитает книгу c номером i, затем книгу с номером i + 1, затем книгу с номером i + 2 и так далее. Он продолжает этот процесс до тех пор, пока либо не закончится его свободное время, либо не прочитает книгу с номером n. Каждую книгу Валера читает целиком, то есть он не читает книгу, которую не успеет дочитать до конца из-за нехватки свободного времени.

Посчитайте максимальное количество книг, которое Валера сможет прочитать.

Входные данные
В первой строке заданы два целых числа n и t (1 ≤ n ≤ 105; 1 ≤ t ≤ 109) — количество книг и количество свободных минут у Валеры соответственно. Во второй строке задана последовательность из n целых чисел a1, a2, ..., an (1 ≤ ai ≤ 104), в которой число ai обозначает количество минут, которое требуется для прочтения i-ой книги.

Выходные данные
Выведите единственное целое число — максимальное количество книг, которое Валера сможет прочитать.
*/

// func foo(n, t int, timeCollection []int) int {
// 	for i := 1; i < len(timeCollection); i++ {
// 		for j := i; j > 0 && timeCollection[j] < timeCollection[j-1]; j-- {
// 			timeCollection[j], timeCollection[j-1] = timeCollection[j-1], timeCollection[j]
// 		}
// 	}

// 	var count, time int

// 	for _, v := range timeCollection {
// 		if time+v <= t {
// 			count++
// 			time += v
// 		}
// 	}

//		return count
//	}

/*
В школе есть N классов, в каждом из которых учится M учеников. Будет проводиться забег на 100 м в тире, и от каждого класса будет выбран представитель для участия в этом забеге. Вам было поручено выбрать этих представителей. Поскольку вы не хотели, чтобы забег был односторонним, вы должны были выбрать представителей так, чтобы разница между способностями лучшего представителя и худшего была минимальной.

Например, если N = 3 и M = 4, и в каждом классе есть ученики со следующими способностями:

Класс 1: {12, 16, 67, 43}

Класс 2: {7, 17, 68, 48}

Класс 3: {14, 15, 77, 54}

то лучше всего выбрать ученика со способностями 16 из класса 1, 17 из класса 2 и 15 из класса 3. Таким образом, разница в этом случае будет равна 17-15 = 2.

Ваша задача - вычислить минимально возможную разницу, которую можно получить, выбрав по представителю из каждого класса.

Вход
Первая строка ввода состоит из двух целых чисел, N и M. (1<=N<=1000, 1<=M<=1000).

Следующие N строк будут содержать M целых чисел. j-й элемент i-й строки - это способности j-го ученика в i-м классе. Число находится в диапазоне от 0 до 10^9, включительно.

Вывод
Выведите минимальную разницу, которую можно получить, выбрав по представителю из каждого класса.
Example
Input:
3 4
12 16 67 43
7 17 68 48
14 15 77 54

Output:
2
Input:
4 3
10 20 30
40 50 60
70 80 90
100 110 120

Output:
70
*/

// func foo(arrs [][]int) int {

// }

// func main() {
// 	fmt.Println(foo([][]int{[]int{12, 16, 67, 43}, []int{7, 17, 68, 48}, []int{14, 15, 77, 54}})) // 2
// }

func find(arr []int, target int) int {
	left := 0
	right := len(arr) - 1
	var mid int

	if arr[0] > target {
		return -1
	}

	for left <= right {
		mid = (left + right) / 2

		if arr[mid] > target {
			right = mid - 1
		} else {
			left = mid + 1
		}
	}

	if arr[right] == target {
		return right
	}

	return -1
}

func main() {
	fmt.Println(find([]int{-1, -1, 2, 2, 11, 11, 13, 13, 16, 16, 22, 22, 44, 44}, 22))
}
