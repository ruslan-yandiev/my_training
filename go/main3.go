package main

import (
	"fmt"
)

// Передача слайса как аргумента функции происходит хитро. Длина и вместимость передаются по значению,
// но массив значений передается по ссылке. Вследствие этого получается неявное поведение:
// добавленные элементы не сохранятся в исходный слайс, но изменение существующих останется:
// То есть длина (len) слайса и его выделенный при инициализации размер (cap) будут имутабельны, а массив значений на котором построен Слайс будет мутабельным
// len текущая заполненность
// cap выделенная в памяти вместимость(размер)

// len = 5. Массив сразу будет заполнен 5-ю нулевыми значениями
//*nums := make([]int, 5, 5) // [0, 0, 0, 0, 0]

// len = 0, но cap = 5. Массив будет пустым, однако заполнение слайса через append будет эффективным, потому что в памяти уже выделен массив нужной длины
//*nums := make([]int, 0, 5) // []

func main() {
	nums := []int{1, 2, 3, 4, 5}

	modifySlice(nums)

	fmt.Println(nums) // [1 2 10 4 5]
}

func modifySlice(nums []int) {
	nums[2] = 10           // элемент будет и в исходном слайсе
	nums = append(nums, 6) // элемент не добавится в исходный слайс
}
