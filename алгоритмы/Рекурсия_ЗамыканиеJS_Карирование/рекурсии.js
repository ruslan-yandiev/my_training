// ! Итеративная рекурсия с сохранением промежуточного результата
function f(num) {
    const f2 = (a, b) => (b === 1 ? a : f2(a * b, b - 1));

    return num === 1 ? num : f2(num, num - 1);
}

console.log(f(5));

//  ==================================================================

// ! класическая рекурсия без сохранения промежуточного результата
const f2 = (num) => num === 1 ? num : num * f2(num - 1);

console.log(f2(5));

//  ==================================================================

// ! рекурсивное дерево
// ...