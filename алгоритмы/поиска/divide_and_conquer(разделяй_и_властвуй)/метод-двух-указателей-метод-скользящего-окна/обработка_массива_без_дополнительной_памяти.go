//! Два указание - это название нескольких способов оптимизации решений, содержащих вложенные циклы.
//! Оптимизация происходит за счет того, что во внутреннем цикле инекс движется только в одном направлении и не возвращается назат
//! Вариант 1: Два указателя движутся в одну сторону (скользящее окно - sliding window)
//! - найти максимальный/минимальный "хороший" участок кода
//!- нати количество "хороших" участков
//! - обработать массив за один проход
// =============================================================================================================================================
/*
	УДАЛИТЬ ИЗ НЕ ОТСОРТИРОВАННОГО МАССИВА НЕОБХОДИМОЕ ЧИСЛО
	без использования дополнительной памяти
*/

func foo(arr []int, num int) []int {
	index := 0

	for l, r := 0, 0; r < len(arr); r++ {
		if arr[r] != num {
			arr[l] = arr[r]
			l++
			index++
		}
	}

	return arr[:index]
}

func main() {
	arr := []int{5, 2, 0, 3, 0, 0, 2, 4}

	fmt.Println(foo(arr, 0))
}

// ==============================================================================================================================
/*
	Перенести все нули в конец массива
	без использования дополнительной памяти
*/

func moveZeroes(nums []int) {
	for l, r := 0, 0; r < len(nums); r++ {
		if nums[r] != 0 {
			nums[l], nums[r] = nums[r], nums[l]
			l++
		}
	}
}

func main() {
	arr := []int{5, 2, 0, 3, 0, 0, 2, 4}
	moveZeroes(arr)

	fmt.Println(arr)
}
