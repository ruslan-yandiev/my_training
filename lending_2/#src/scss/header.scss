.header {
    background-color: #1c242a;

    &__container {
        position: relative;
        display: flex;
        align-items: center;
        height: 75px;

        @media (max-width: $md3+px) {
            justify-content: space-between;
        }
    }

    &__logo {
        position: relative;
        z-index: 2;

        width: 144px;

        @media (max-width: $md3+px) {
            // ! отцентрируем наш логотип таким способом
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
        }
    }

    &__menu {
    }

    &__actions {
    }
}

.menu {
    // ! зададим немного другим способом padding-left: 30px;
    // ! теперь эти 30 пикселей будут в процентах и будут сужаться при сужении экрана, для большей адаптивности и губкости
    padding: 0px 0px 0px 30px/950px * 100%;

    // * позволили меню увеличиваться
    flex: 1 1 auto;
    @media (max-width: $md3+px) {
        flex: 0 0 auto;
    }

    &__icon {
    }

    &__body {
        @media (max-width: $md3+px) {
            background-color: #363a3ddc;
            position: fixed;
            width: 100%;
            height: 100%;
            left: 0;
            top: 0;

            // ! нужно нам для создания скрола в бургер меню
            overflow: auto;

            padding: 100px 0px 20px 0px;

            // ! реализуем скрытие бургер меню списка
            opacity: 0;
            visibility: hidden;
            transform: all 0.3s ease 0s;

            // ! псевдо элемент, будет у нас плашкой закрывающей. плашка нам нужна ,чтобы за нее скрывался текст раскрытой бургер менюшки при его скроле
            &:after {
                content: '';
                background-color: #1c242a;
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 75px;
            }

            // ! а при появлении класса _active обеспечим появление бургер меню списка
            &._active {
                opacity: 1;
                visibility: visible;
            }
        }
    }

    &__list {
        display: flex;
        justify-content: center;

        li {
            margin: 0px 15px;
        }

        @media (max-width: $md3+px) {
            display: block;
            text-align: center;
            li {
                margin: 0px 0px 30px 0px;
                &:last-child {
                    margin: 0px 0px 0px 0px;
                }
            }
        }
    }

    &__link {
        font-family: 'Conv_pfdintextcondpro-regular';
        text-transform: uppercase;
        letter-spacing: 1.4px;
        color: #fff;

        @media (min-width: 992px) {
            &:hover {
                text-decoration: underline;
            }
        }

        @media (max-width: $md3+px) {
            font-size: 24px;
        }
    }
}

//Burger ===============================================
.icon-menu {
    // наш бургер меню, при достижении нужного размера экрана.
    @media (max-width: $md3+px) {
        // display: block;
        position: relative;
        width: 30px;
        height: 18px;
        cursor: pointer;
        z-index: 5; // ! определяет расположение элемента по трехмерной шкале под буквой z (в двухмерном виде это нахлест-наложение) бальше глубже!

        span {
            // transform: anim(0.8s, 0s); // ???????? что с анимацией не так
            // transform: all 0.8s ease 0s; // ???????? что с анимацией не так

            top: calc(50% - 1px);
            left: 0px;
            position: absolute;
            width: 100%;
            height: 2px;
            background-color: #bb9c66;

            &:first-child {
                top: 0px;
            }
            &:last-child {
                top: auto;
                bottom: 0px;
            }
        }

        &._active {
            // при присвоении класса _active иконку бургер меню превратить в креститик при нажатии. (класс _active присвоется при нажатии, реализация в JS)
            span {
                transform: scale(0);

                &:first-child {
                    transform: rotate(-45deg);
                    top: calc(50% - 1px);
                }

                &:last-child {
                    transform: rotate(45deg);
                    bottom: calc(50% - 1px);
                }
            }
        }
    }
}
// /Burger =======================================/

.actions-header {
    display: flex;
    align-items: center;

    &__region {
        position: relative;
        z-index: 2;

        // ! @extend позволяет подключить все стили из определенного класса!!!!
        @extend .menu__link;

        padding: 0px 0px 0px 30px;
        line-height: 18px;
        min-width: 18px;
        min-height: 18px;
        background: url('../img/icons/globe.png') left no-repeat;

        @media (max-width: 890px) {
            padding: 0px 0px 0px 0px;

            span {
                // отключим отображение контента в span и самого span (уберем из потока отображения) по достижению указанных выше размереов
                display: none;
            }
        }

        @media (max-width: $md3+px) {
            padding: 0px 0px 0px 30px;

            span {
                display: inline-block;
            }
        }
    }

    &__user {
        // внешний отступ от элемента отступим, а не от блока по левой стороне
        margin: 0px 0px 0px 30px;

        @media (max-width: 890px) {
            margin: 0px 0px 0px 15px;
        }
    }
}

.user-header {
    &__icon {
        position: relative;
        z-index: 2;

        // ! чтобы появлялась рука при наведении
        cursor: pointer;
    }

    &__menu {
        // ! opacity и visibility будут по дефолту скрывать нашу менюшку и не позволит на нее нажиамть
        opacity: 0;
        visibility: hidden;
        // влияет на скорость анимации исчезновения и появления менюшки
        transition: all 0.6s ease 0s;

        top: 108px;
        right: 0;
        // ! укажем наше позицианирование меню в отношении нашего класса  .header__contener и уже ему зададим position: relative
        position: absolute;
        background-color: #1c242a;
        padding: 20px;
        min-width: 194px;
        li {
            margin: 0px 0px 8px 0px;
            &:last-child {
                margin: 0px 0px 0px 0px;
            }
        }

        @media (max-width: $md3+px) {
            width: 100%;
        }

        // ! данный класс мы динамически как создаем, так и удаляем через JS тем самым проявляя нашу менюшку по клику и скрывая(класс динамически удаляется и в силу вступают дефолтные настройки указынные выше)
        &._active {
            top: 78px;
            opacity: 1;
            visibility: visible;
        }
    }

    &__link {
        color: #fff;
        padding: 0px 0px 0px 30px;
        display: inline-block;
        line-height: 18px;

        &_1 {
            background: url(../img/icons/globe.png) 1px center no-repeat;
        }

        &_2 {
            background: url(../img/icons/3-layers.png) left center no-repeat;
        }

        &_3 {
            background: url(../img/icons/palm.svg) 4px center no-repeat;
        }

        &_4 {
            background: url(../img/icons/hammer.svg) left center no-repeat;
        }

        @media (min-width: 992px) {
            &:hover {
                text-decoration: underline;
            }
        }
    }
}
